# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Note: added step to capitalize the ERMs
# Note: if deploy fails, remove deployment branches and tags restrictions for the environment github-pages from /erm-database/settings/environments

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Custom Deploy Jekyll site to Pages

on:
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@8575951200e472d5f2d95c625da0c7bec8217c42 # v1.161.0
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: fix capitalization for ERM* pages
        env:
            JEKYLL_ENV: production
        run: |
            # Navigate to the directory containing the erm
            cd _site/substance/erm
            echo before:
            ls

            # Loop through all files containing 'erm*'
            for file in erm*; do
                # Check if the file exists
                if [ -e "$file" ]; then
                    # Create the new file name with 'ERM'
                    new_name=$(echo "$file" | sed 's/erm/ERM/')

                    # Rename the file and fix the canonical URL
                    cat "$file" | sed -e 's/substance\/erm\/erm00000062.html/substance\/erm\/ERM00000062.html/' > "$new_name"

                    echo "Renamed: $file to $new_name"
                fi
            done
            echo after:
            ls
      - name: fix the URLs in the sitemap.xml
        env:
            JEKYLL_ENV: production
        run: |
            # Navigate to the directory containing the sitemap.xml
            cd _site
            cat sitemap.xml | sed -e 's/\/substance\/erm\/erm0/\/substance\/erm\/ERM0/' > sitemap2.xml
            mv sitemap2.xml sitemap.xml
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
    permissions:
     contents: read
     pages: write
     id-token: write
